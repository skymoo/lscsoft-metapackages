stages:
  - generate
  - build
  - test

variables:
  CONDA_BLD_PATH: "${CI_PROJECT_DIR}/conda-bld"
  PIP_CACHE_DIR: "${CI_PROJECT_DIR}/.cache/pip"

lint:yaml:
  image: python:alpine
  stage: generate
  before_script:
    - python -m pip install yamllint
  script:
    - yamllint meta/*.yml
  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - .cache/pip

generate:
  image: python:alpine
  stage: generate
  before_script:
    - python -m pip install python-dateutil jinja2 PyYAML
  script:
    - python generate.py
  artifacts:
    expire_in: 3h
    paths:
      - stage
  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - .cache/pip

build:debian:
  image: igwn/base:stretch
  stage: build
  needs:
    - generate
  before_script:
    - apt-get update
    - apt-get --assume-yes install equivs lintian
  script:
    - for i in stage/*/deb/; do (
          echo "-- $i";
          cd $i;
          equivs-build control
      ); done
    - mkdir debs
    - for i in stage/*/deb/*.deb; do
          echo "-- $i";
          lintian --pedantic $i;
          cp $i debs;
      done
  artifacts:
    expire_in: 3h
    paths:
      - debs

build:rhel:
  image: igwn/base:el7
  stage: build
  needs:
    - generate
  before_script:
    - yum --assumeyes install rpm-build rpmlint
  script:
    - for i in stage/*/rpm/*.spec; do
          rpmlint $i;
          rpmbuild -ba --define "_topdir $CI_PROJECT_DIR/rpmbuild" $i;
      done
    - mkdir rpms srpms
    - mv rpmbuild/RPMS/noarch/*.rpm rpms
    - mv rpmbuild/SRPMS/*.rpm srpms
  artifacts:
    expire_in: 3h
    paths:
      - rpms
      - srpms

build:conda:
  image: igwn/base:conda
  stage: build
  needs:
    - generate
  before_script:
    # install dependencies for generate.py, and conda builds
    - conda install --yes
          "python>3.4"
          pyyaml
          networkx
          "conda<4.7.11a0"
          conda-build
          conda-forge-pinning
  script:
    - set -x;
    - for pkg in $(python build-order.py); do
        recipe_dir="stage/${pkg}/conda";
        echo "---------- Processing ${pkg}";
        conda render ${recipe_dir}
            --use-local
            --variant-config-files $(conda info --base)/conda_build_config.yaml;
        conda build ${recipe_dir}
            --error-overlinking
            --error-overdepending
            --no-anaconda-upload
            --use-local
            --variant-config-files $(conda info --base)/conda_build_config.yaml;
      done
  artifacts:
    expire_in: 3h
    paths:
      - conda-bld/noarch
      - conda-bld/linux-64

test:debian:
  image: igwn/base:stretch-proposed
  stage: test
  needs:
    - generate
    - build:debian
  before_script:
    - apt-get update
    - apt-get --assume-yes upgrade
  script:
    - dpkg -i debs/*.deb || { apt-get --assume-yes -f install; dpkg -i debs/*.deb; }
    - ls -1 stage/*/deb/test.sh | xargs -I $ -L1 sh -c "printf '%s testing ' '--'; echo $ | cut -d\/ -f2; bash -ex $"

test:rhel:
  image: igwn/base:el7-testing
  stage: test
  needs:
    - generate
    - build:rhel
  before_script:
    - yum clean all
    - yum makecache
    - yum --assumeyes update
  script:
    - yum --assumeyes localinstall rpms/*.rpm
    - ls -1 stage/*/rpm/test.sh | xargs -I $ -L1 sh -c "printf '%s testing ' '--'; echo $ | cut -d\/ -f2; bash -ex $"

test:conda:
  image: igwn/base:conda
  stage: test
  needs:
    - generate
    - build:conda
  before_script:
    - conda install --yes networkx pyyaml
  script:
    - pkglist=$(python build-order.py)
    - conda create --name test --use-local ${pkglist}
    - conda list --name test
    - ls -1 stage/*/conda/test.sh | xargs -I $ -L1 sh -c "printf '%s testing ' '--'; echo $ | cut -d\/ -f2; bash -ex $"
